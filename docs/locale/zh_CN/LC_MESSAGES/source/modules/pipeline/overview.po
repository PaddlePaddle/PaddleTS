# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, PaddleTS
# This file is distributed under the same license as the PaddleTS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: PaddleTS \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-19 15:36+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/modules/pipeline/overview.rst:3
#: 7b4cd09805c94dabbb5e81fcb133e2af
msgid "Pipeline"
msgstr ""

#: ../../source/modules/pipeline/overview.rst:5
#: 9c806fb3825b45f98c63b0ce12d8e4d3
msgid ""
"The pipeline is designed to build a workflow for time series modeling "
"which may be comprised of a set of `transformers "
"<../transform/overview.html>`_ and a model."
msgstr ""
"`Pipeline` 可用于创建包含多个 `特征工程 <../transform/overview.html>`_ "
"方法与一个学习器的时序建模机器学习工作流。"

#: ../../source/modules/pipeline/overview.rst:9
#: f969ae7cbf554167badec2bdeca3d5f4
msgid "1. Pipeline: Chain transformers"
msgstr "1. 组装特征工程工作流"

#: ../../source/modules/pipeline/overview.rst:11
#: 8c5ca464bf814c848e3abb6bba5b54ad
msgid ""
"There is often a sequence of steps in processing the time series data. "
"Pipeline can be used for chaining multiple `transformers "
"<../transform/overview.html>`_ into one."
msgstr "时序数据预处理通常包含多个步骤。我们可将多个特征工程方法组装为一个Pipeline。"

#: ../../source/modules/pipeline/overview.rst:15
#: 43a71f0341724ffa90014735e57f0fa0
msgid "1.1. Prepare data"
msgstr "1.1. 准备数据"

#: ../../source/modules/pipeline/overview.rst:79
#: ce29626b5ce3457aad86fd0ace0d1c54
msgid ""
"For this data, we might want to do anomaly detection on both observed co-"
"variates and known co-variates using `KSigma` then generate the time "
"feature using `TimeFeatureGenerator`."
msgstr ""
"对于上述数据的处理，我们可能希望利用 `KSigma` 对观察协变量与已知协变量做异常检测，然后利用 `TimeFeatureGenerator`"
" 生成时间特征。"

#: ../../source/modules/pipeline/overview.rst:83
#: 05d68e85fa3747378c786beafdfadd63
msgid "1.2. Construct"
msgstr "1.2. 构建"

#: ../../source/modules/pipeline/overview.rst:85
#: 26c597ba6cb143c99e1d6d0cbe583e70
msgid ""
"The pipeline is built using a list of (key, value) pairs, where the key "
"is the class name of `transformers <../transform/overview.html>`_ and "
"value is the init parameter of `transformers "
"<../transform/overview.html>`_."
msgstr "`Pipeline` 使用包含 (key, value) 对的列表进行初始化。 key 是特征工程方法的类名，value 是此方法的初始化参数。"

#: ../../source/modules/pipeline/overview.rst:88
#: ../../source/modules/pipeline/overview.rst:135
#: 3017d3e6abfb4d2596da62b76ca6f53a 616ef586ff434e728804cdd784c08c57
msgid "This pipeline is comprised of the following:"
msgstr "该 `Pipeline` 由以下部分组成："

#: ../../source/modules/pipeline/overview.rst:90
#: ../../source/modules/pipeline/overview.rst:137
#: 232acfac006e4a3f8c8d1fbc589bcc01 8c55ae7512b043059b60921451e5b9df
msgid ""
"A `KSigma <../../api/paddlets.transform.ksigma.html>`_ transformer to "
"detect outliers."
msgstr "用于异常值检测的 `Ksigma <../../api/paddlets.transform.ksigma.html>`_ 特征工程方法。"

#: ../../source/modules/pipeline/overview.rst:91
#: ../../source/modules/pipeline/overview.rst:138
#: ac7e8a706f5d4990838029ccc3693e6d d9d714afe295427a8130a02e0a61ec79
msgid ""
"A `TimeFeatureGenerator "
"<../../api/paddlets.transform.time_feature.html>`_ transformer to "
"generate time features."
msgstr ""
"用于生成时间特征的 `TimeFeatureGenerator "
"<../../api/paddlets.transform.time_feature.html>`_ 特征工程方法。"

#: ../../source/modules/pipeline/overview.rst:100
#: 7fa995479265468da9b02894fb904f3e
msgid "1.3. Transform"
msgstr "1.3. 执行特征工程"

#: ../../source/modules/pipeline/overview.rst:102
#: 7a2db0ecf2914d9f9120d326d91c3919
msgid "Fit pipeline and perform the transformation."
msgstr "拟合 `Pipeline` 并执行特征工程。"

#: ../../source/modules/pipeline/overview.rst:127
#: b6aa020fcd3c49f682ce692f7fc7146e
msgid "2. Pipeline: Chain model"
msgstr "2. 组装含有学习器的工作流"

#: ../../source/modules/pipeline/overview.rst:129
#: 614b76cbcfab4a97bdfa53c0110ebf2b
msgid ""
"The last object of a pipeline may be a model, then you can only call "
"`fit` once on your data to `fit` whole steps in your pipeline."
msgstr ""
"`Pipeline` 的最后一个步骤可以是一个学习器，你仅需调用一次 `fit` 即可实现 `Pipeline` "
"中的各个特征工程方法与学习器对数据的拟合。"

#: ../../source/modules/pipeline/overview.rst:133
#: aca511984e834f438abc62b985156464
msgid "2.1. Construct"
msgstr "2.1. 构建"

#: ../../source/modules/pipeline/overview.rst:139
#: 4cb14cd27c8948be999e7a34f84c5935
msgid ""
"A `MLPRegressor <../../api/paddlets.models.forecasting.dl.mlp.html>`_ to "
"build a model on given time series data."
msgstr ""
"用于对时序数据建立时序模型的 `MLPRegressor "
"<../../api/paddlets.models.dl.paddlepaddle.mlp.html>`_ 学习器。"

#: ../../source/modules/pipeline/overview.rst:153
#: 0dc8713db587492093b282308f3e8713
msgid "2.2. Fit pipeline and make predictions"
msgstr "2.2. 拟合 `Pipeline` 并执行预测"

#: ../../source/modules/pipeline/overview.rst:155
#: 0cd916786f0546069a96d7f06afb3ba1
msgid ""
"You can use `pipeline.predict` for time series forecasting or use "
"`recursive_predict` for recursive multi-step time series forecasting "
"after fitting the pipeline:"
msgstr ""
"对于拟合后的 `Pipeline`，你可以使用 `pipeline.predict` 进行时序预测或使用 `recursive_predict` "
"进行多步时序预测。"

#: ../../source/modules/pipeline/overview.rst:168
#: 3e2b20700e7b4e05b914a2a2dd5da0d6
msgid "2.3. Recursive predict"
msgstr "2.3. 递归多步预测"

#: ../../source/modules/pipeline/overview.rst:170
#: 334e652a38fc4f5fbb37295af54b7ce4
msgid ""
"The recursive strategy involves applying `pipeline.predict` method "
"iteratively for multi-step time series forecasting. The predicted results"
" from the current call will be appended to the given `TSDataset` object "
"and will appear in the loopback window for the next call."
msgstr ""
"递归多步预测的策略是：一步步利用 `pipeline.predict` 方法实现多步时序预测。当前时刻的预测结果会被添加至 `TSDataset`"
" 时序数据集 的目标列中，并在模型预测时，被添加至历史目标值的滑动窗口中用于下一时刻预测。"

#: ../../source/modules/pipeline/overview.rst:174
#: a16457a2e3974bee8a0cb8325370abe1
msgid ""
"Note that `pipeline.recursive_predict` is not supported when "
"`pipeline.skip_chunk` != 0."
msgstr "注意： `pipeline.recursive_predict` 函数在 `pipeline.skip_chunk` != 0 时，无法使用。"

#: ../../source/modules/pipeline/overview.rst:176
#: 87b5cb7749804752aa58a7d64b617016
msgid ""
"Note that each call of `pipeline.predict` will return a result of length "
"`out_chunk_len`, so `pipeline.recursive_predict` will be called "
"ceiling(`predict_length`/`out_chunk_len`) times to meet the required "
"length. For example, the `out_chunk_length` of the pipeline mentioned "
"before is 2, but `recursive_predict` allows you to set `predict_length` "
"as 5 or more:"
msgstr ""
"注意：每次调用 `pipeline.predict` 的输出长度为 `out_chunk_len`， 所以 `pipeline.predict` "
"会被调用 ceiling(`predict_length`/`out_chunk_len`) 次，以满足多步时序的输出长度需求。例如，上述例子中的"
" `Pipeline` 的 `out_chunk_length` 是2，而 `recursive_predict` 允许你将 "
"`predict_length` 设置为5或者更多："

#: ../../source/modules/pipeline/overview.rst:193
#: 7f1e48f8eac14693891d9cfdc248b290
msgid ""
"When known_cov or observed_cov exists, the length of known_cov must be "
"greater than or equal to the number of `recursive prediction steps * "
"prediction length` and the length of observed_cov must be greater than or"
" equal to number of `(recursive prediction steps - 1) * prediction` "
"length to meet the needs of feature construction."
msgstr ""
"当known_cov或者observed_cov存在时，known_cov时间长度需要大于等于 `递归预测步数*预测长度` "
"，observed_cov的时间长度需要大于等于 `（递归预测步数-1）*预测长度` ，以满足预测时特征构建的需求。"

#: ../../source/modules/pipeline/overview.rst:197
#: 23898c6a02a341d4934314e5bfe0d5a8
msgid ""
"**Note**: The prediction errors are accumulated such that the performance"
" of prediction will degrade as the prediction time horizon increases."
msgstr "**注意**： 在递归预测中，预测误差会被累计，因此预测性能会随着预测长度的增加而下降。"

#: ../../source/modules/pipeline/overview.rst:200
#: 95926569abbb497cab64ae35823c11ec
msgid ""
"For detailed usage, please refer to `API: pipeline.recursive_predict "
"<../../api/paddlets.pipeline.pipeline.html#paddlets.pipeline.pipeline.Pipeline.recursive_predict>`_"
msgstr ""
"更多使用细节，请参考：`API: pipeline.recursive_predict "
"<../../api/paddlets.pipeline.pipeline.html#paddlets.pipeline.pipeline.Pipeline.recursive_predict>`_"

#: ../../source/modules/pipeline/overview.rst:204
#: 287c3a2a681646e98eb023956c6aa08a
msgid "3. Pipeline: Persistence"
msgstr "3. 持久化"

#: ../../source/modules/pipeline/overview.rst:206
#: 212a71437bd4404785a257c2d940b7c7
msgid ""
"Similar to other PaddleTS models, `Pipeline` provides save() and load() "
"functions to support persistence."
msgstr "与其他的 PaddleTS 模型相似，`Pipeline` 提供了 save() 和 load() 函数以支持持久化的需要。"

#: ../../source/modules/pipeline/overview.rst:209
#: 3fceb878fe1d4112ac4030c25edf2777
msgid "3.1. Save"
msgstr "3.1. 保存"

#: ../../source/modules/pipeline/overview.rst:214
#: 8281e53746ec4111bef9d70c522ed962
msgid "3.2. Load"
msgstr "3.2. 加载"

