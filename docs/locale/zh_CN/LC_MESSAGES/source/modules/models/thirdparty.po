# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, PaddlePaddle
# This file is distributed under the same license as the   package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-09-21 14:36+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/modules/models/thirdparty.rst:3
#: 780a957c56be4e408c461ab32b4cfdec
msgid "Third-party Model"
msgstr "第三方模型自动集成"

#: ../../source/modules/models/thirdparty.rst:5
#: 9ddd98e0e0124a91b0b40f8c34fa8663
msgid ""
"PaddleTS allows users to implement time series models based on third "
"party models and verify the feasibility and performance efficiently."
msgstr "PaddleTS支持用户方便地基于第三方模型进行时序建模，并高效验证其可行性、效果。"

#: ../../source/modules/models/thirdparty.rst:7
#: 5764e7cc686641aea4fb457893f69029
msgid ""
"`scikit-learn <https://scikit-learn.org>`_ is currently the only "
"supported third-party library for PaddleTS."
msgstr "`scikit-learn <https://scikit-learn.org>`_ 是PaddleTS目前支持的第三方库。"

#: ../../source/modules/models/thirdparty.rst:10
#: efebcd6971d04645979b187515cb4c5e
msgid "1. Make Time Series Model Based On Third-party Model"
msgstr "1. 基于第三方模型构建时序模型"

#: ../../source/modules/models/thirdparty.rst:12
#: 54ed075b7be64278aebbf8b2fbdbbd8b
msgid ""
"PaddleTS provides `make_ml_model "
"<../../api/paddlets.models.forecasting.ml.ml_model_wrapper.html#paddlets.models.forecasting.ml.ml_model_wrapper.make_ml_model>`_"
" interface that allows users to build time series models by simply "
"specifying a third party model class and relevant parameters without "
"extra development."
msgstr ""
"PaddleTS 提供了 `make_ml_model "
"<../../api/paddlets.models.forecasting.ml.ml_model_wrapper.html#paddlets.models.forecasting.ml.ml_model_wrapper.make_ml_model>`_"
" 接口，用户仅需指定一个第三方机器学习模型类的类型和相关参数，即可构建时序模型，无需额外开发。"

#: ../../source/modules/models/thirdparty.rst:16
#: de731e95ba9441ad9db95662e2a3605e
msgid "1.1 Minimal Example"
msgstr "1.1 最小化示例"

#: ../../source/modules/models/thirdparty.rst:18
#: 4f2b9f9453474a8ab4213e8905ced42e
msgid ""
"Below is an example of how to make time series models based on "
"`sklearn.neighbors.KNeighborsRegressor <https://scikit-"
"learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsRegressor.html>`_"
" ."
msgstr ""
"下方示例展示了如何基于 `sklearn.neighbors.KNeighborsRegressor <https://scikit-"
"learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsRegressor.html>`_"
" 构建时序机器学习模型。"

#: ../../source/modules/models/thirdparty.rst:48
#: 44325c5b555c4c36821c7c866569f766
msgid "1.2 Convert MLDataLoader to Trainable / Predictable ndarray"
msgstr "1.2 将MLDataLoader转换为可训练/预测的ndarray数据"

#: ../../source/modules/models/thirdparty.rst:50
#: 90121a086fbd4a82bbe7a59b75c8d3bd
msgid ""
"The third-party library such as `scikit-learn <https://scikit-"
"learn.org>`_ usually accepts numpy.ndarray data as `fit` and `predict` "
"method inputs, while PaddleTS uses "
"`paddlets.models.forecasting.ml.adapter.ml_dataloader.MLDataLoader` to "
"represent trainable / predictable time series data. Thus, `make_ml_model`"
" provides 2 optional arguments `udf_ml_dataloader_to_fit_ndarray` and "
"`udf_ml_dataloader_to_predict_ndarray` allow users to convert "
"`MLDataLoader` to an `numpy.ndarray` object."
msgstr ""
"一些第三方库（如 `scikit-learn <https://scikit-learn.org>`_ "
"）的机器学习模型通常会接收numpy.ndarray类型数据作为 `fit` 和 `predict` 方法的输入。但是在PaddleTS中，会使用"
" `paddlets.models.forecasting.ml.adapter.ml_dataloader.MLDataLoader` "
"表示可用于训练/预测的时序数据。因此，`make_ml_model` 提供了 `udf_ml_dataloader_to_fit_ndarray`"
" 和 `udf_ml_dataloader_to_predict_ndarray` 两个可选参数，用于支持用户将 `MLDataLoader` "
"转换为 `numpy.ndarray` 数据对象。"

#: ../../source/modules/models/thirdparty.rst:55
#: 70e1a6e83de74c46876211642077d855
msgid ""
"By default, `make_ml_model` uses `default_ml_dataloader_to_fit_ndarray "
"<../../api/paddlets.models.forecasting.ml.ml_model_wrapper.html#paddlets.models.ml.ml_model_wrapper.default_ml_dataloader_to_fit_ndarray>`_"
" and `default_ml_dataloader_to_predict_ndarray "
"<../../api/paddlets.models.forecasting.ml.ml_model_wrapper.html#paddlets.models.ml.ml_model_wrapper.default_ml_dataloader_to_predict_ndarray>`_"
" to convert MLDataLoader to `numpy.ndarray` for `fit` and `predict` "
"method, respectively. Also, users are able to develop user-defined "
"convert functions to get expected trainable / predictable output."
msgstr ""
"`make_ml_model` 默认会使用 "
"`default_ml_dataloader_to_fit_ndarray "
"<../../api/paddlets.models.forecasting.ml.ml_model_wrapper.html#paddlets.models.ml.ml_model_wrapper.default_ml_dataloader_to_fit_ndarray>`_"
" 和 `default_ml_dataloader_to_predict_ndarray "
"<../../api/paddlets.models.forecasting.ml.ml_model_wrapper.html#paddlets.models.ml.ml_model_wrapper.default_ml_dataloader_to_predict_ndarray>`_"
" 两个函数将 MLDataLoader 分别转换为 `fit` 和 "
"`predict` 方法可接收的 `numpy.ndarray` "
"数据。同时，用户也可以开发自定义的数据转换函数，用于得到可用于训练/预测的数据。"

#: ../../source/modules/models/thirdparty.rst:109
#: f04303f372da41be9da79f8661843dc0
msgid "2. Multi-step forecasting"
msgstr "2. 多时间点时序预测"

#: ../../source/modules/models/thirdparty.rst:111
#: 825f7eb6946048fca708f2fe32df02e9
msgid ""
"The time series models also support multi-timestep forecasting by calling"
" `recursive_predict "
"<../../api/paddlets.models.base.html#paddlets.models.base.BaseModel.recursive_predict>`_"
" ."
msgstr ""
"通过第三方模型构建的时序模型也可以通过调用 `recursive_predict "
"<../../api/paddlets.models.base.html#paddlets.models.base.BaseModel.recursive_predict>`_"
" 实现多时间点预测。"

