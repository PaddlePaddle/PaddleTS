# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, PaddleTS
# This file is distributed under the same license as the PaddleTS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleTS \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-09-16 16:20+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/api/paddlets.transform.base.rst:2
#: 07f1610880ae463fb606cd7d6b46ffa0
msgid "paddlets.transform.base"
msgstr "paddlets.transform.base"

#: ae4735eec7a341188bf6211a38e5a5dd of paddlets.transform.base.BaseTransform:1
msgid "Bases: :py:class:`object`"
msgstr "基类：:py:class:`object`"

#: 1a6979b0310b47dbaa5ed25be98cd03b of paddlets.transform.base.BaseTransform:1
msgid ""
"Base class for all data transformation classes (named `transformers` in "
"this module)"
msgstr "所有数据转换类的基础类（在该模块中命名为 `transformers`）。"

#: b0d0b724b6ae4eeeb0e821a9ac0c9b6a of paddlets.transform.base.BaseTransform:3
msgid ""
"Any subclass or transformer needs to inherit from this base class and "
"implement :func:`fit`, :func:`transform` and :func:`fit_transform` "
"methods."
msgstr ""
"任何用于时序数据转换（如：:class:`transform.MinMaxScaler`）的类均可以继承自此基类， 并实现 "
":func:`fit`, :func:`transform` 和 :func:`fit_transform` 方法。"

#: 0c6f5d7fb62440bea02e0a33af4fb476 0cdc0211e0084b16bb607798978ea99b
#: 3bb0e367831e4fd088e2bed8b5e8920a of
#: paddlets.transform.base.BaseTransform.fit:1
#: paddlets.transform.base.BaseTransform.fit_one:1
#: paddlets.transform.base.UdBaseTransform.fit_one:1
msgid "Learn the parameters from the dataset needed by the transformer."
msgstr "从给定数据集中学习transformer所需的参数。"

#: 2387c55eecf24bd79573ea12d362063d af05ba37b8a542ffa3792e7c358018af
#: e2c6c90a0194462b962e36d4497c21bc f53d5b9de8434d7f8bc8368d0192eb5f
#: f548b49048dc48fd8b732c8420847db5 of
#: paddlets.transform.base.BaseTransform.fit:3
#: paddlets.transform.base.BaseTransform.fit_one:3
#: paddlets.transform.base.BaseTransform.fit_transform:4
#: paddlets.transform.base.BaseTransform.transform:3
#: paddlets.transform.base.BaseTransform.transform_one:3
msgid ""
"Any non-abstract class inherited from this class should implement this "
"method."
msgstr "任何继承自此类的非抽象子类均需实现此方法。"

#: 34317d3e3afe4f8dbabce0717a16c9b5 4635ade5a7f44703adf4f7546e50c6a1 of
#: paddlets.transform.base.BaseTransform.fit:5
#: paddlets.transform.base.BaseTransform.fit_one:5
msgid ""
"The parameters fitted by this method is transformer-specific. For "
"example, the `MinMaxScaler` needs to compute the MIN and MAX, and the "
"`StandardScaler` needs to compute the MEAN and STD (standard deviation) "
"from the dataset."
msgstr ""
"该方法训练的参数和具体的transformer有关。举例来说，`MinMaxScaler` 需要计算 最大值（MAX）和最小值（MIN），同时 "
"`StandardScaler` 需要计算均值（MEAN）和标准偏差（standard deviation）。"

#: 29f2606bb8da40f5b48745c007448111 4a11fcf7dcdd42239a98cd19f97aae63
#: 4f75b1168c2b468b95d02ea56f403d69 5c6b92892a474fc9a593d23384b0ebf2
#: 6b68ab414451422397185f295f2e5e62 6f65f3c1173740bda551268ff845c672
#: 72ac47931ad04154811089b76eae15a4 89d7ee9011cb447da5a4c7fdf2ff1d69
#: 9bb4666e3a5f41259782fdc6368090a9 b33f421b7ef447e3a525805c036f0add
#: d215c6c3b8b4465b8037db64069bb4e2 dbfbb879cea9484a8516f1d08c1a60a7 of
#: paddlets.transform.base.BaseTransform.fit
#: paddlets.transform.base.BaseTransform.fit_one
#: paddlets.transform.base.BaseTransform.fit_transform
#: paddlets.transform.base.BaseTransform.inverse_transform
#: paddlets.transform.base.BaseTransform.inverse_transform_one
#: paddlets.transform.base.BaseTransform.transform
#: paddlets.transform.base.BaseTransform.transform_n_rows
#: paddlets.transform.base.BaseTransform.transform_one
#: paddlets.transform.base.UdBaseTransform
#: paddlets.transform.base.UdBaseTransform.fit_one
#: paddlets.transform.base.UdBaseTransform.inverse_transform_one
#: paddlets.transform.base.UdBaseTransform.transform_one
msgid "Parameters"
msgstr "参数"

#: 810ee2d49c08452d9b44dfaae8054a70 fdb160216a90415ba613413381375bd8 of
#: paddlets.transform.base.BaseTransform.fit:9
#: paddlets.transform.base.BaseTransform.fit_one:9
msgid "dataset from which to fit the transformer."
msgstr "用于训练transformer的数据集。"

#: 350d0f60ee8d4c9d87f6dc5ab3435df8 892336a7ed0949669d4d3e40eab5271b of
#: paddlets.transform.base.BaseTransform.transform:1
#: paddlets.transform.base.BaseTransform.transform_one:1
msgid "Apply the fitted transformer on the dataset"
msgstr "将训练完成的transformer应用于给定数据集。"

#: 20d538cb222a48bc9d1fd08fc8f1c0e0 4c71f57e445140a5954d16074ad7f304
#: 5f8c3fe33c2f4ceb896db368b9a17e55 6d664e8a0c57448085ad148befa0fd0b of
#: paddlets.transform.base.BaseTransform.transform:5
#: paddlets.transform.base.BaseTransform.transform_n_rows:4
#: paddlets.transform.base.BaseTransform.transform_one:5
#: paddlets.transform.base.UdBaseTransform.transform_one:3
msgid "dataset to be transformed."
msgstr "待转换的输入数据。"

#: 072b82f90a7f4ce8ae3be1bdc92cdf08 0e0eadc619e84bcd8f088b6d37267491
#: 4d19112e2a604dc698f8cfd0b1fe4592 d3bd62fa79b94a67807b1684810d9a72
#: e121aaf9ae86439e8be6e01639ac8b13 e17934deb135478e97ef94d8d57f01cd of
#: paddlets.transform.base.BaseTransform.fit_transform:8
#: paddlets.transform.base.BaseTransform.inverse_transform:15
#: paddlets.transform.base.BaseTransform.inverse_transform_one:15
#: paddlets.transform.base.BaseTransform.transform:7
#: paddlets.transform.base.BaseTransform.transform_n_rows:8
#: paddlets.transform.base.BaseTransform.transform_one:7
msgid "Set to True to perform inplace transformation. Default is False."
msgstr "若设置为True，则会执行一个就地转换。默认值为False。"

#: 1e18dbd463284ca398619e736cb76e20 28ce6798195a4cad8985b9147ba9f660
#: 58e00993b46548d8bcca17f0ad9243d8 5981ec201b8e4e3caabd110e559de032
#: 676963e519a649ef92b63ab36fd937b9 7aeaad00aed2421091f664573efbfc24
#: c42a3b68234143e0b3bee7653195bd94 f459f55ca8404f519f3cb571f07d2998
#: f6e39d19a60d47abac3d200c5b1a3dea of
#: paddlets.transform.base.BaseTransform.fit_transform
#: paddlets.transform.base.BaseTransform.inverse_transform
#: paddlets.transform.base.BaseTransform.inverse_transform_one
#: paddlets.transform.base.BaseTransform.transform
#: paddlets.transform.base.BaseTransform.transform_n_rows
#: paddlets.transform.base.BaseTransform.transform_one
#: paddlets.transform.base.UdBaseTransform.fit_one
#: paddlets.transform.base.UdBaseTransform.inverse_transform_one
#: paddlets.transform.base.UdBaseTransform.transform_one
msgid "Returns"
msgstr "返回"

#: 3a0f121d62524bbaa40b0e4b2eeb1c75 467271a406ef4a8180044bc51de81922
#: bcf6a9f4ef9644fb99a4123bf801a60a of
#: paddlets.transform.base.BaseTransform.transform:10
#: paddlets.transform.base.BaseTransform.transform_n_rows:11
#: paddlets.transform.base.BaseTransform.transform_one:10
msgid "transformed dataset."
msgstr "完成数据转换的数据集。"

#: 12583af586be42d8957776b50fed9980 79544aa597e44a8e85422816dfe30987
#: 82fa18fc873849499f80ccecf506ac6d 93845eecacc548408f4329d9febae78b
#: 9d5ddfb35a97490f9e103d7f9d943548 b4a099c012c4418387e9c9a71af0b6d9
#: ceb7f611a1264bd8b038a6bae07eab33 of
#: paddlets.transform.base.BaseTransform.fit_transform
#: paddlets.transform.base.BaseTransform.inverse_transform
#: paddlets.transform.base.BaseTransform.inverse_transform_one
#: paddlets.transform.base.BaseTransform.transform
#: paddlets.transform.base.BaseTransform.transform_n_rows
#: paddlets.transform.base.BaseTransform.transform_one
#: paddlets.transform.base.UdBaseTransform.inverse_transform_one
msgid "Return type"
msgstr "返回类型"

#: 39938640296d4f5e88480f7ac116da9d of
#: paddlets.transform.base.BaseTransform.transform_n_rows:1
msgid "Apply the fitted transformer on the part of the dataset"
msgstr "将训练完成的transformer应用于给定数据集。"

#: c743ddaed244446fb39fbff6b24a3279 of
#: paddlets.transform.base.BaseTransform.transform_n_rows:6
msgid "n_rows to be transformed."
msgstr "待转换的输入数据。"

#: 4cc23a81fac44939bbe9717feacae2fd of
#: paddlets.transform.base.BaseTransform.fit_transform:1
msgid ""
"Combine the above fit and transform into one method, firstly fitting the "
"transformer from the dataset and then applying the fitted transformer on "
"the dataset."
msgstr "将训练和转换合并在一个方法中。该方法首先训练transformer，然后将训练完成的transformer应用到给定数据集上。"

#: 0ae9e95bc7524f6686f3bf044778c987 of
#: paddlets.transform.base.BaseTransform.fit_transform:6
msgid "dataset to process."
msgstr "将要被处理的数据集。"

#: 31fb5447c92143129e3d510662a83ecd of
#: paddlets.transform.base.BaseTransform.fit_transform:11
msgid "transformed data."
msgstr "完成数据转换的数据集。"

#: 177e2151063343a194d8d06b94cbd72d 9d9cac164bd34360be71a35964a90df3
#: f7c70e4e4ab3405a836c3a365732558c of
#: paddlets.transform.base.BaseTransform.inverse_transform:1
#: paddlets.transform.base.BaseTransform.inverse_transform_one:1
#: paddlets.transform.base.UdBaseTransform.inverse_transform_one:1
msgid "Inversely transform the dataset output by the `transform` method."
msgstr "`transform` 方法的逆向转换方法。"

#: 98ed1ef139e94aabbfccba236177184c 9d743e695fb44a4189ef7f58df3e80f6 of
#: paddlets.transform.base.BaseTransform.inverse_transform:3
#: paddlets.transform.base.BaseTransform.inverse_transform_one:3
msgid ""
"Differ from other abstract methods, this method is not decorated by "
"abc.abstractmethod. The reason is that not all the transformations can be"
" transformed back inversely, thus, it is neither possible nor mandatory "
"for all sub classes inherited from this base class to implement this "
"method."
msgstr ""
"与其他抽象方法不同的是，该方法并没有被 abc.abstractmethod "
"装饰器装饰。这样做的原因是并非所有的时序数据转换都可以被逆向转换回原来的形式，因此，我们认为不可能、也无法强制要求所有继承自此基类的子类都实现该方法。"

#: c79c1e67ee974c13b4bb765fd6c1c607 ccde42832ff148198353d2501c1276f9 of
#: paddlets.transform.base.BaseTransform.inverse_transform:7
#: paddlets.transform.base.BaseTransform.inverse_transform_one:7
msgid ""
"In general, other modules such as Pipeline will possibly call this method"
" WITHOUT knowing if the called transform instance has implemented this "
"method. To work around this, instead of simply using `pass` expression as"
" the default placeholder, this method raises a NotImplementedError to "
"enable the callers (e.g. Pipeline) to use try-except mechanism to "
"identify those data transformation operators that do NOT implement this "
"method."
msgstr ""
"通常来说，一些诸如 Pipeline "
"在内的其他模块可能在不知道被调用的transform实例是否已经实现该方法的前提下调用此方法。为了解决此问题，我们没有使用 `pass` "
"表达式作为该基类方法的默认占位符，而是抛出了一个 NotImplementedError 错误。这个抛出的错误使得调用者可以使用 try-"
"except 机制去识别那些没有实现该方法的 transform 实例。"

#: 2735dcbc054442abb53330ee5c8626b0 80c268ebc87a4fe4ab5a6b2c32251a10
#: 8c805c7ea1b24ddb9e4c41e3f386c85a of
#: paddlets.transform.base.BaseTransform.inverse_transform:13
#: paddlets.transform.base.BaseTransform.inverse_transform_one:13
#: paddlets.transform.base.UdBaseTransform.inverse_transform_one:3
msgid "dataset to be inversely transformed."
msgstr "完成逆向转换的数据集。"

#: 61ee38d4f1ac477db35ea205a025755f 63a82ab685374dd08a284ddaf40f42cd of
#: paddlets.transform.base.BaseTransform.inverse_transform:18
#: paddlets.transform.base.BaseTransform.inverse_transform_one:18
msgid "inverserly transformed dataset."
msgstr "完成逆向转换的数据集。"

#: 1652d5910abd43fd9dbfbe7600428b86 d365cdc1cb5f4272a31c6a4017dad94e of
#: paddlets.transform.base.BaseTransform.inverse_transform
#: paddlets.transform.base.BaseTransform.inverse_transform_one
msgid "Raises"
msgstr "抛出异常"

#: 9a9a419782f746de8d84b1d0126e63d5 of
#: paddlets.transform.base.UdBaseTransform:1
msgid "Bases: :py:class:`~paddlets.transform.base.BaseTransform`"
msgstr ""

#: 2efe6356afa24655902759035a0e8e4e of
#: paddlets.transform.base.UdBaseTransform:1
msgid "User define base transform."
msgstr "用户自定义数据转换模块"

#: 1f51a5f504ee41d8904b07d7ca07c5f1 of
#: paddlets.transform.base.UdBaseTransform:3
msgid "User define or third-party transformer object."
msgstr "用户自定义或第三方数据转换模块对象"

#: ac65da2999ba46b0bba5a26f64f74a51 of
#: paddlets.transform.base.UdBaseTransform:5
msgid "Column name or names to be transformed."
msgstr "待转换的输入数据。"

#: 9647a23c5b1d409a91a3f8f5ad2db1a7 of
#: paddlets.transform.base.UdBaseTransform:7
msgid "Whether each column of data is transformed independently, default False."
msgstr "是否对每列进行单独的转换处理, 默认为否"

#: e77671ba07304fb2b6f4c24ab709e51a of
#: paddlets.transform.base.UdBaseTransform:9
msgid "Whether to delete the original column, default=False."
msgstr "是否删除原始的输入列数据, 默认为否"

#: d3b0bee48e4f4f879e804b3cc12b8c17 of
#: paddlets.transform.base.UdBaseTransform:11
msgid ""
"The type of output columns, None values represent automatic inference "
"based on input."
msgstr "输出列的类型, None代表将会基于输入列进行自动推断"

#: be3bc35508cb437cbe4c38b3403acaee of
#: paddlets.transform.base.UdBaseTransform:13
msgid ""
"The name of output columns, None values represent automatic inference "
"based on input."
msgstr "输出列的名称, None代表将会基于输入列进行自动推断"

#: 4823ea03d9fa491593e15caeba35bdf2 of
#: paddlets.transform.base.UdBaseTransform.fit_one:3
msgid "dataset from which to fit the transformer"
msgstr "用于训练transformer的数据集。"

#: f86d56ea36764108beefcfc06037d838 of
#: paddlets.transform.base.UdBaseTransform.fit_one:6
msgid "self"
msgstr ""

#: 96ab1bfa2c1a472694c319646ce24652 of
#: paddlets.transform.base.UdBaseTransform.transform_one:1
msgid "Transform or inverse_transform the dataset with the fitted transformer."
msgstr "`transform` 方法的逆向转换方法。"

#: 8e77831f8fac4104ad4df5832b55b992 of
#: paddlets.transform.base.UdBaseTransform.transform_one:5
msgid "whether to replace the original data. default=False"
msgstr "是否替换原始的数据,默认是False"

#: c9c6ca5cc7e3414d95739223dc638b57 of
#: paddlets.transform.base.UdBaseTransform.transform_one:8
msgid "TSDataset"
msgstr "完成数据转换的数据集。"

#: 7900a44577fa4ee28884aaeb92639ab6 of
#: paddlets.transform.base.UdBaseTransform.inverse_transform_one:5
msgid "Set to True to perform inplace operation and avoid data copy."
msgstr "设置为True以执行就地操作并避免数据复制"

#: d4677f0356de40d8b912ae0a06c93d64 of
#: paddlets.transform.base.UdBaseTransform.inverse_transform_one:8
msgid "Inversely transformed TSDataset."
msgstr "完成逆向转换的数据集。"


